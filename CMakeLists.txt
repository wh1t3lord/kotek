cmake_minimum_required(VERSION 3.19.3)
project(kotek.engine)

message("[Engine]: build type is '${CMAKE_BUILD_TYPE}'")

if (WIN32)
	set(KOTEK_DEPS_FOLDER "kotek-engine-deps-win32")
endif()

if(CMAKE_BUILD_TYPE STREQUAL "Debug")
	add_definitions(
		-DKOTEK_DEBUG
	)
endif()

if ("${KOTEK_UNICODE}" STREQUAL "")
	set(KOTEK_UNICODE "ON")
endif()

message("[Engine]: UNICODE is '${KOTEK_UNICODE}'")

if("${KOTEK_UNICODE}" STREQUAL "ON")
	add_definitions(-DUNICODE -D_UNICODE -DKOTEK_UNICODE)
else()
endif()

if ("${KOTEK_TESTS}" STREQUAL "")
	set(KOTEK_TESTS "ON")
endif()

message("[Engine]: TESTS is '${KOTEK_TESTS}'")
if ("${KOTEK_TESTS}" STREQUAL "ON")
	add_definitions(-DKOTEK_TESTS)
elseif("${KOTEK_TESTS}" STREQUAL "OFF")
	set(KOTEK_TESTS_RUNTIME "OFF")
endif()

if ("${KOTEK_TESTS_RUNTIME}" STREQUAL "")
	set(KOTEK_TESTS_RUNTIME "ON")
endif()

message("[Engine]: TESTS use in runtime is '${KOTEK_TESTS_RUNTIME}'")

if ("${KOTEK_TESTS}" STREQUAL "ON")
	if ("${KOTEK_TESTS_RUNTIME}" STREQUAL "ON")
		add_definitions(-DKOTEK_TESTS_RUNTIME)
	endif()
endif()

if ("${KOTEK_CPU_PROFILER}" STREQUAL "")
	if ("${CMAKE_BUILD_TYPE}" STREQUAL "Debug")
		set(KOTEK_CPU_PROFILER "OFF")
	else()
		set(KOTEK_CPU_PROFILER "ON")
	endif()
endif()

message("[Engine]: CPU Profiler is '${KOTEK_CPU_PROFILER}'")
if ("${KOTEK_CPU_PROFILER}" STREQUAL "ON")
	add_definitions(-DKOTEK_CPU_PROFILER)
	add_definitions(-DTRACY_ENABLE)
	add_definitions(-DTRACY_DELAYED_INIT)
	add_definitions(-DTRACY_MANUAL_LIFETIME)
endif()

if ("${KOTEK_GPU_PROFILER}" STREQUAL "")
	if ("${CMAKE_BUILD_TYPE}" STREQUAL "Debug")
		set(KOTEK_GPU_PROFILER "OFF")
	else()
		set(KOTEK_GPU_PROFILER "ON")
	endif()
endif()

message("[Engine]: GPU Profiler is '${KOTEK_GPU_PROFILER}'")
if ("${KOTEK_GPU_PROFILER}" STREQUAL "ON")
	add_definitions(-DKOTEK_GPU_PROFILER)
endif()

if ("${KOTEK_MATH_LIBRARY}" STREQUAL "")
	if (WIN32)
		set(KOTEK_MATH_LIBRARY "DXM")
	else()
		set(KOTEK_MATH_LIBRARY "GLM")
	endif()
endif()

if ("${KOTEK_MATH_LIBRARY}" STREQUAL "GLM")
	add_definitions(-DKOTEK_MATH_LIBRARY_GLM)
	set(glm_DIR "../../${KOTEK_DEPS_FOLDER}/glm/cmake/glm/")
elseif("${KOTEK_MATH_LIBRARY}" STREQUAL "DXM")
	add_definitions(-DKOTEK_MATH_LIBRARY_DXM)
elseif("${KOTEK_MATH_LIBRARY}" STREQUAL "EIGEN")
	add_definitions(-DKOTEK_MATH_LIBRARY_EIGEN)
endif()

message("[Engine]: math library is '${KOTEK_MATH_LIBRARY}'")

include_directories("engine")

add_subdirectory("engine/kotek.core")
add_subdirectory("engine/kotek.core.api")
add_subdirectory("engine/kotek.core.defines")
add_subdirectory("engine/kotek.core.defines.render")
add_subdirectory("engine/kotek.core.defines.render.dx")
add_subdirectory("engine/kotek.core.defines.render.gl")
add_subdirectory("engine/kotek.core.defines.render.vk")
add_subdirectory("engine/kotek.core.defines_dependent")
add_subdirectory("engine/kotek.core.types.char")
add_subdirectory("engine/kotek.core.types.numerics")
add_subdirectory("engine/kotek.core.types.string")
add_subdirectory("engine/kotek.core.casting")
add_subdirectory("engine/kotek.core.casting.lexical")
add_subdirectory("engine/kotek.core.casting.string")
add_subdirectory("engine/kotek.core.constants")
add_subdirectory("engine/kotek.core.constants.math")
add_subdirectory("engine/kotek.core.containers")
add_subdirectory("engine/kotek.core.containers.any")
add_subdirectory("engine/kotek.core.containers.string")
add_subdirectory("engine/kotek.core.containers.hash")
add_subdirectory("engine/kotek.core.containers.deque")
add_subdirectory("engine/kotek.core.containers.dll")
add_subdirectory("engine/kotek.core.containers.filesystem.path")
add_subdirectory("engine/kotek.core.containers.function")
add_subdirectory("engine/kotek.core.containers.io")
add_subdirectory("engine/kotek.core.containers.json")
add_subdirectory("engine/kotek.core.containers.map")
add_subdirectory("engine/kotek.core.containers.microsoft")
add_subdirectory("engine/kotek.core.containers.multithreading")
add_subdirectory("engine/kotek.core.containers.multithreading.tbb")
add_subdirectory("engine/kotek.core.containers.multithreading.atomic")
add_subdirectory("engine/kotek.core.containers.multithreading.mutex")
add_subdirectory("engine/kotek.core.containers.multithreading.shared_mutex")
add_subdirectory("engine/kotek.core.containers.multithreading.thread")
add_subdirectory("engine/kotek.core.containers.multithreading.semaphore")
add_subdirectory("engine/kotek.core.containers.pair")
add_subdirectory("engine/kotek.core.containers.queue")
add_subdirectory("engine/kotek.core.containers.shared_ptr")
add_subdirectory("engine/kotek.core.containers.unique_ptr")
add_subdirectory("engine/kotek.core.containers.unordered_map")
add_subdirectory("engine/kotek.core.containers.unordered_set")
add_subdirectory("engine/kotek.core.containers.variant")
add_subdirectory("engine/kotek.core.containers.vector")
add_subdirectory("engine/kotek.core.filesystem")
add_subdirectory("engine/kotek.core.filesystem.file_text")
add_subdirectory("engine/kotek.core.format")
add_subdirectory("engine/kotek.core.memory")
add_subdirectory("engine/kotek.core.memory.cpu")
add_subdirectory("engine/kotek.core.memory.gpu")
add_subdirectory("engine/kotek.core.memory.gpu.vulkan")
add_subdirectory("engine/kotek.core.memory.vld")
add_subdirectory("engine/kotek.core.math")
add_subdirectory("engine/kotek.core.profilers")
add_subdirectory("engine/kotek.core.profilers.cpu")
add_subdirectory("engine/kotek.core.profilers.gpu")
add_subdirectory("engine/kotek.core.window")
add_subdirectory("engine/kotek.core.window.glfw")

add_subdirectory("engine/kotek.game")

add_subdirectory("engine/kotek.ui")
add_subdirectory("engine/kotek.ui.imgui")

if (WIN32)
	# DEPRECATED: undo comments when you finish vulkan renderer!
#add_subdirectory("engine/kotek.render.dx12")
endif()

add_subdirectory("engine/kotek.render")

add_subdirectory("engine/kotek.render.model")
add_subdirectory("engine/kotek.render.model.assimp")

add_subdirectory("engine/kotek.render.vk")

add_subdirectory("engine/kotek.render.gl3")
add_subdirectory("engine/kotek.render.gl.glad3")
add_subdirectory("engine/kotek.render.gl.glad4.6")

add_subdirectory("engine/kotek.exe")

set_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT kotek)